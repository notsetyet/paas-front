{"remainingRequest":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zyj\\paas-front\\code\\src\\views\\CreateContainer.vue?vue&type=style&index=0&id=e9e4f5ca&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\zyj\\paas-front\\code\\src\\views\\CreateContainer.vue","mtime":1601084882917},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\css-loader\\dist\\cjs.js","mtime":1600762070719},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1600762094690},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\postcss-loader\\src\\index.js","mtime":1600762085460},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600762068352},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\vue-loader\\lib\\index.js","mtime":1600762094690}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouc2V0dGluZyB7DQogIG1hcmdpbjogMTBweDsNCn0NCi5DUFUtYWJpbGl0eSB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KfQ0K"},{"version":3,"sources":["CreateContainer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgQA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateContainer.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"create-container\">\r\n    <div class=\"layout-breadcrumb\">\r\n      <Breadcrumb style=\"float: left\">\r\n        <BreadcrumbItem to=\"/\">首页</BreadcrumbItem>\r\n        <BreadcrumbItem>创建容器</BreadcrumbItem>\r\n      </Breadcrumb>\r\n      <br />\r\n      <h2 style=\"font-weight: bold;\">创建容器</h2>\r\n    </div>\r\n    <div class=\"layout-content\">\r\n      <Card style=\"margin-top: 30px; \">\r\n        <Steps :current=\"current\">\r\n          <Step title=\"请选择镜像\"></Step>\r\n          <Step title=\"配置端口\"></Step>\r\n        </Steps>\r\n        <div class=\"step1\" v-if=\"current == 0\">\r\n          <Select v-model=\"image\" style=\"width:300px; margin-top: 10px\">\r\n            <i-option\r\n              v-for=\"item in containerList\"\r\n              :key=\"item.id\"\r\n              :value=\"item.show\"\r\n              >{{ item.show }}</i-option\r\n            >\r\n          </Select>\r\n          <br />\r\n          <i-input\r\n            v-model=\"name\"\r\n            placeholder=\"请输入容器名称...\"\r\n            style=\"width: 300px; margin: 10px\"\r\n          ></i-input>\r\n          <br />\r\n          <Button\r\n            type=\"primary\"\r\n            style=\"width: 300px; margin: 10px\"\r\n            @click=\"modal1 = true\"\r\n            >拉取镜像</Button\r\n          >\r\n          <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n          <Modal\r\n            v-model=\"modal1\"\r\n            title=\"拉取镜像\"\r\n            @on-ok=\"ok\"\r\n            @on-cancel=\"cancel\"\r\n          >\r\n            <i-input\r\n              v-model=\"value1\"\r\n              placeholder=\"请输入镜像名称...\"\r\n              style=\"width: 300px; margin: 10px\"\r\n            ></i-input>\r\n            <i-input\r\n              v-model=\"value2\"\r\n              placeholder=\"请输入镜像版本...\"\r\n              style=\"width: 300px; margin: 10px\"\r\n            ></i-input>\r\n            <Spin size=\"large\" fix v-if=\"spinShow\"></Spin>\r\n          </Modal>\r\n        </div>\r\n        <div class=\"step2\" v-if=\"current == 1\">\r\n          <!--<div class=\"setting\">\r\n                        <span>配置类型：</span>\r\n                        <ButtonGroup>\r\n                            <Button>计算优化型</Button>\r\n                            <Button>内存优化型</Button>\r\n                            <Button>存储优化型</Button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                    <div class=\"setting\">\r\n                        <span>配置性能：</span>\r\n                        <ButtonGroup>\r\n                            <Button>低</Button>\r\n                            <Button>中</Button>\r\n                            <Button>高</Button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                    <div class=\"CPU-ability\">\r\n                        <span>CPU配额(mCores)：</span>\r\n                        <Slider style=\"width: 300px;\" :value=\"this.coreValue\" :tip-format=\"format1\"></Slider>\r\n                    </div>\r\n                    <div class=\"CPU-ability\">\r\n                        <span>内存配额(MiB)：</span>\r\n                        <Slider style=\"width: 300px\" :value=\"this.localStorageValue\" :tip-format=\"format2\"></Slider>\r\n                    </div>\r\n                    <div class=\"CPU-ability\">\r\n                        <span>存储配额(MiB)：</span>\r\n                        <Slider style=\"width: 300px\" :value=\"this.storageValue\" :tip-format=\"format3\"></Slider>\r\n                    </div>\r\n                    <Divider></Divider>-->\r\n          <div class=\"port\">\r\n            <i-input\r\n              v-model=\"port\"\r\n              placeholder=\"开放端口\"\r\n              style=\"width: 300px; margin: 10px\"\r\n            ></i-input>\r\n            <br />\r\n            <h4>已添加端口：{{ ports }}</h4>\r\n            <i-button style=\"width: 150px; margin: 20px\" @click=\"addport()\"\r\n              >Add</i-button\r\n            >\r\n            <!--<i-button style=\"width: 150px; margin: 20px\" @click=\"showport()\"\r\n              >显示已添加端口</i-button\r\n            >-->\r\n          </div>\r\n          <Divider></Divider>\r\n          <div class=\"open\">\r\n          <template>\r\n            <h4>是否开启终端</h4><i-switch v-model=\"switch1\" />\r\n          </template>\r\n          </div>\r\n        </div>\r\n        <br>\r\n        <i-button\r\n          type=\"primary\"\r\n          @click=\"previous\"\r\n          v-if=\"current != 0\"\r\n          style=\"margin-right: 10px\"\r\n          >上一步</i-button\r\n        >\r\n        <i-button type=\"primary\" @click=\"next\" v-if=\"current != 1\"\r\n          >下一步</i-button\r\n        >\r\n        <i-button type=\"primary\" v-if=\"current == 1\" @click=\"submit()\"\r\n          >完成创建</i-button\r\n        >\r\n      </Card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  mounted() {\r\n    axios.get(\"http://10.251.253.188:8080/images/all\").then((res) => {\r\n      console.log(\"1\");\r\n      console.log(res.data);\r\n      this.back = res.data;\r\n\r\n      for (var i = 0; i < this.back.length; i++) {\r\n        let tmp = {};\r\n        console.log(this.back[i].Id);\r\n        tmp.id = this.back[i].Id;\r\n        tmp.show = this.back[i].RepoTags[0];\r\n        this.containerList.push(tmp);\r\n      }\r\n      console.log(\"2\");\r\n      console.log(this.containerList);\r\n    });\r\n    this.fresh();\r\n  },\r\n  data() {\r\n    return {\r\n      switch1: false,\r\n      spinShow: false,\r\n      modal1: false,\r\n      value1: \"\",\r\n      value2: \"\",\r\n      current: 0,\r\n      back: [],\r\n      containerList: [],\r\n      image: \"\",\r\n      name: \"\",\r\n      port: \"\",\r\n      ports: [],\r\n      values: \"\",\r\n      coreValue: 0,\r\n      localStorageValue: 0,\r\n      storageValue: 0,\r\n    };\r\n  },\r\n\r\n  methods: {\r\n    ok() {\r\n      console.log(this.value1);\r\n      this.spinShow = true;\r\n      axios\r\n        .post(\"http://10.251.253.188:8080/images/pull/\", null, {\r\n          params: {\r\n            imageName: this.value1,\r\n            tag: this.value2,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          this.$Message.success(\"拉取成功\");\r\n          this.spinShow = false;\r\n          location.reload();\r\n        });\r\n    },\r\n    cancel() {\r\n      this.$Message.info(\"Clicked cancel\");\r\n    },\r\n    submit() {\r\n      let abc=0;\r\n      if (this.switch1==true){abc=1;}\r\n      axios\r\n        .post(\r\n          \"http://10.251.253.188:8080/containers/create/\" +\r\n            localStorage.getItem(\"uid\"),\r\n          {\r\n            image: this.image,\r\n            name: this.name,\r\n            ports: this.ports,\r\n            isTerminalOpen: abc,\r\n          }\r\n        )\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          this.$Message.success(\"创建成功\");\r\n        });\r\n    },\r\n    addport() {\r\n      if (this.port == \"\") {\r\n        alert(\"端口号不能为空\");\r\n        return;\r\n      }\r\n      let tmpData = this.port;\r\n      this.ports.push(tmpData);\r\n      this.$Message.success(\"添加成功\");\r\n    },\r\n    showport() {\r\n      alert(this.ports);\r\n    },\r\n    next() {\r\n      if (this.current == 3) {\r\n        this.current = 0;\r\n      } else {\r\n        this.current += 1;\r\n      }\r\n    },\r\n    previous() {\r\n      if (this.current != 0) {\r\n        this.current -= 1;\r\n      } else {\r\n        console.log(\"previous false\");\r\n      }\r\n    },\r\n    continueAdd() {\r\n      this.current = 0;\r\n      this.fresh();\r\n    },\r\n    fresh() {},\r\n    format1(val) {\r\n      return 100 * val;\r\n    },\r\n    format2(val) {\r\n      return 100 * val;\r\n    },\r\n    format3(val) {\r\n      return 100 * val;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.setting {\r\n  margin: 10px;\r\n}\r\n.CPU-ability {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n</style>\r\n"]}]}