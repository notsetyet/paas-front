{"remainingRequest":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\zyj\\paas-front\\code\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\zyj\\paas-front\\code\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\zyj\\paas-front\\code\\src\\views\\CreateContainer.vue?vue&type=template&id=e9e4f5ca&scoped=true&","dependencies":[{"path":"C:\\Users\\zyj\\paas-front\\code\\src\\views\\CreateContainer.vue","mtime":1600825987290},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600762068352},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1600762094690},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1600762068352},{"path":"C:\\Users\\zyj\\paas-front\\code\\node_modules\\vue-loader\\lib\\index.js","mtime":1600762094690}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}